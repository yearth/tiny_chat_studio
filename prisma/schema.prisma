generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String         @unique
  password      String?
  image         String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  apiKeys       ApiKey[]
  conversations Conversation[]
}



model Conversation {
  id        String    @id @default(cuid())
  title     String    @default("New Conversation")
  userId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  Message[]
}

model Message {
  id             String       @id @default(cuid())
  content        String
  role           String
  conversationId String
  modelId        String?
  createdAt      DateTime     @default(now())
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  model          AIModel?     @relation(fields: [modelId], references: [id])
}

model AIModel {
  id            String         @id @default(cuid())
  name          String
  provider      String
  modelId       String
  description   String?
  iconUrl       String?
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  messages      Message[]
}

model ApiKey {
  id        String   @id @default(cuid())
  name      String
  key       String   @unique
  provider  String
  userId    String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
